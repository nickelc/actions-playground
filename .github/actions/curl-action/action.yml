name: curl action
description: test action

inputs:
  version:
    description: 'Version of the mod file'
    required: false
  changelog:
    description: 'Changelog of the mod file'
    required: false
  changelog-path:
    description: 'Path to changelog of the mod file'
    required: false
  active:
    description: 'Label this upload as the current release (Default: true)'
    required: false
    default: 'true'
  filehash:
    description: 'Filehash of the mod file'
    required: false
  metadata:
    description: 'Metadata blob of the mod file'
    required: false
  metadata-path:
    description: 'Path to the metadata blob of the mod file'
    required: false

runs:
  using: composite
  steps:
    - id: form
      shell: bash
      env:
        version: ${{ inputs.version }}
        changelog: ${{ inputs.changelog }}
        changelog_path: ${{ inputs.changelog-path }}
        active: ${{ inputs.active }}
        filehash: ${{ inputs.filehash }}
        metadata: ${{ inputs.metadata }}
        metadata_path: ${{ inputs.metadata-path }}
      run: |
        env
        curl_fields=()

        if [ -n "$version" ]; then
            file=$(mktemp -p $RUNNER_TMP version.XXXX)
            echo $version >> $file
            curl_fields+=("'version=<$file'")
        fi

        if [ -n "$changelog" ]; then
            file=$(mktemp -p $RUNNER_TMP changelog.XXXX)
            echo $changelog >> $file
            curl_fields+=("'changelog=<$file'")
        elif [ -f "$changelog_path" ]; then
            curl_fields+=("'changelog=<$changelog_path'")
        fi

        if [ "$active" = "true" ]; then
            curl_fields+=("'active=true'')
        elif [ "$active" = "false" ]; then
            curl_fields+=("'active=false'")
        fi

        if [ -n "$filehash" ]; then
            file=$(mktemp -p $RUNNER_TMP filehash.XXXX)
            echo $filehash >> $file
            curl_fields+=("'filehash=<$file'")
        fi

        if [ -n "$metadata" ]; then
            file=$(mktemp -p $RUNNER_TMP metadata.XXXX)
            echo $metadata >> $file
            curl_fields+=("'metadata_blob=<$file'")
        elif [ -f "$metadata_path" ]; then
            curl_fields+=("'metadata_blob=<$metadata_path'")
        fi

        echo "fields=$(for f in ${curl_fields[@]}; do echo -n ' -F' $f; done)" >> $GITHUB_OUTPUT

        cat $GITHUB_OUTPUT

    - run: curl https://httpbin.org/post ${{ steps.form.outputs.fields }}
      shell: bash
